variable "aws_region" {
  type    = string
  default = "us-east-1"
}

variable "source_ami" {
  type    = string
  default = "ami-013b3de8a8fa9b39f"
}

variable "ssh_username" {
  type    = string
  default = "ubuntu"
}

variable "vpc_id" {
  type    = string
  default = "vpc-0acefcad24c0b914b"
}

variable "subnet_id" {
  type    = string
  default = "subnet-02d41e81eddf16052"
}

packer {
  required_plugins {
    amazon = {
      source  = "github.com/hashicorp/amazon"
      version = "~> 1"
    }
  }
}

source "amazon-ebs" "autogenerated_1" {
  ami_name        = "app-image-${formatdate("YYYY_MM_DD_HH_mm", timestamp())}"
  ami_description = "AMI for CSYE 6225"
  instance_type   = "t2.small"
  region          = var.aws_region
  ami_regions     = ["us-east-1"]
  ssh_username    = var.ssh_username
  vpc_id          = var.vpc_id
  subnet_id       = var.subnet_id
  source_ami      = var.source_ami
  aws_polling {
    delay_seconds = 120
    max_attempts  = 50
  }

  launch_block_device_mappings {
    device_name           = "/dev/sda1"
    delete_on_termination = true
    volume_size           = 25
    volume_type           = "gp2"
  }
}

build {
  sources = ["source.amazon-ebs.autogenerated_1"]

  provisioner "file" {
    source      = "./webapp.zip"
    destination = "~/"
  }

  provisioner "file" {
    source      = "./systemd/webapp.service"
    destination = "/tmp/webapp.service"
  }

  provisioner "shell" {
    environment_vars = [
      "DEBIAN_FRONTEND=noninteractive",
      "CHECKPOINT_DISABLE=1"
    ]

    inline = [
      # Set up user
      "sudo groupadd csye6225",
      "sudo useradd -g csye6225 -s /usr/sbin/nologin csye6225 -d /opt/csye6225 -m csye6225",
    
      # Update package list and upgrade the system
      "sudo apt-get update",
      "sudo apt-get upgrade -y",

      # Install Node.js and npm
      "sudo apt-get install -y nodejs npm",

      # Install unzip utility
      "sudo apt-get install -y unzip",
      "sudo -u csye6225 unzip -d /opt/csye6225/webapp ~/webapp.zip",
      "sudo rm ~/webapp.zip",

      # Prepare the application directory
      "cd /opt/csye6225/webapp && sudo -u csye6225 npm i",
      "sudo mkdir /opt/csye6225/webapp/logs",
      "sudo touch /opt/csye6225/webapp/logs/webapp.log",
      "sudo chown 766 /opt/csye6225/webapp/logs/webapp.log",
      "sudo chmod -R csye6225:csye6225 /opt/csye6225/webapp/logs",
      "sudo mv /tmp/webapp.service /etc/systemd/system/webapp.service",
      "sudo apt-get remove --purge -y git",
      
      # set ownership to csye6225:csye6225
      "sudo chown csye6225:csye6225 /etc/systemd/system/webapp.service",
      "sudo chmod -R 700 /opt/csye6225",

      # Set up services
      "sudo systemctl daemon-reload",
      "sudo systemctl enable webapp.service",
    ]

  }

}
